<?xml version='1.0' encoding='UTF-8'?>
<maven2-moduleset plugin="maven-plugin@3.1">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.3">
      <gitLabConnection></gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.7.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://topgear-training-gitlab.wipro.com/RA20110941/DevOpsProfessional.git</url>
        <credentialsId>26a02737-d6a0-4bff-889b-8934e4d18816</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.dabsquared.gitlabjenkins.GitLabPushTrigger plugin="gitlab-plugin@1.5.3">
      <spec></spec>
      <triggerOnPush>true</triggerOnPush>
      <triggerOnMergeRequest>true</triggerOnMergeRequest>
      <triggerOnPipelineEvent>false</triggerOnPipelineEvent>
      <triggerOnAcceptedMergeRequest>false</triggerOnAcceptedMergeRequest>
      <triggerOnClosedMergeRequest>false</triggerOnClosedMergeRequest>
      <triggerOnApprovedMergeRequest>true</triggerOnApprovedMergeRequest>
      <triggerOpenMergeRequestOnPush>source</triggerOpenMergeRequestOnPush>
      <triggerOnNoteRequest>true</triggerOnNoteRequest>
      <noteRegex>Jenkins please retry a build</noteRegex>
      <ciSkip>true</ciSkip>
      <skipWorkInProgressMergeRequest>true</skipWorkInProgressMergeRequest>
      <setBuildDescription>true</setBuildDescription>
      <branchFilterType>All</branchFilterType>
      <includeBranchesSpec></includeBranchesSpec>
      <excludeBranchesSpec></excludeBranchesSpec>
      <targetBranchRegex></targetBranchRegex>
      <secretToken>{AQAAABAAAAAQViIFiZj6BlGJ2YiSMST7JylrW1nj2WjZovVT4Gn5WH0=}</secretToken>
    </com.dabsquared.gitlabjenkins.GitLabPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <rootModule>
    <groupId>devops.ilp1</groupId>
    <artifactId>ILP</artifactId>
  </rootModule>
  <rootPOM>ILP_CI-CD/BookStore/pom.xml</rootPOM>
  <goals>clean install</goals>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <ignoreUpstremChanges>true</ignoreUpstremChanges>
  <ignoreUnsuccessfulUpstreams>false</ignoreUnsuccessfulUpstreams>
  <archivingDisabled>false</archivingDisabled>
  <siteArchivingDisabled>false</siteArchivingDisabled>
  <fingerprintingDisabled>false</fingerprintingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
  <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
  <settings class="jenkins.mvn.DefaultSettingsProvider"/>
  <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
  <reporters/>
  <publishers>
    <org.jfrog.hudson.ArtifactoryRedeployPublisher plugin="artifactory@2.14.0">
      <evenIfUnstable>false</evenIfUnstable>
      <details>
        <artifactoryName>jfrog</artifactoryName>
        <artifactoryUrl>http://localhost:5040/artifactory</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText>libs-release-local</keyFromText>
          <keyFromSelect>libs-release-local</keyFromSelect>
          <dynamicMode>true</dynamicMode>
        </deployReleaseRepository>
        <deploySnapshotRepository>
          <keyFromText>libs-snapshot-local</keyFromText>
          <keyFromSelect>libs-snapshot-local</keyFromSelect>
          <dynamicMode>true</dynamicMode>
        </deploySnapshotRepository>
        <stagingPlugin>
          <pluginName></pluginName>
        </stagingPlugin>
        <userPluginKey></userPluginKey>
      </details>
      <deployArtifacts>true</deployArtifacts>
      <artifactDeploymentPatterns>
        <includePatterns></includePatterns>
        <excludePatterns></excludePatterns>
      </artifactDeploymentPatterns>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <runChecks>false</runChecks>
      <violationRecipients></violationRecipients>
      <includePublishArtifacts>false</includePublishArtifacts>
      <passIdentifiedDownstream>false</passIdentifiedDownstream>
      <scopes></scopes>
      <licenseAutoDiscovery>true</licenseAutoDiscovery>
      <disableLicenseAutoDiscovery>false</disableLicenseAutoDiscovery>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <matrixParams></matrixParams>
      <enableIssueTrackerIntegration>false</enableIssueTrackerIntegration>
      <allowPromotionOfNonStagedBuilds>false</allowPromotionOfNonStagedBuilds>
      <allowBintrayPushOfNonStageBuilds>false</allowBintrayPushOfNonStageBuilds>
      <filterExcludedArtifactsFromBuild>true</filterExcludedArtifactsFromBuild>
      <recordAllDependencies>false</recordAllDependencies>
      <defaultPromotionTargetRepository></defaultPromotionTargetRepository>
      <deployBuildInfo>true</deployBuildInfo>
      <aggregateBuildIssues>false</aggregateBuildIssues>
      <blackDuckRunChecks>false</blackDuckRunChecks>
      <blackDuckAppName></blackDuckAppName>
      <blackDuckAppVersion></blackDuckAppVersion>
      <blackDuckReportRecipients></blackDuckReportRecipients>
      <blackDuckScopes></blackDuckScopes>
      <blackDuckIncludePublishedArtifacts>false</blackDuckIncludePublishedArtifacts>
      <autoCreateMissingComponentRequests>true</autoCreateMissingComponentRequests>
      <autoDiscardStaleComponentRequests>true</autoDiscardStaleComponentRequests>
      <customBuildName>ILP_BookStore</customBuildName>
      <overrideBuildName>true</overrideBuildName>
    </org.jfrog.hudson.ArtifactoryRedeployPublisher>
    <hudson.plugins.deploy.DeployPublisher plugin="deploy@1.13">
      <adapters>
        <hudson.plugins.deploy.tomcat.Tomcat8xAdapter>
          <credentialsId>tomcat_cred</credentialsId>
          <url>http://localhost:5050</url>
        </hudson.plugins.deploy.tomcat.Tomcat8xAdapter>
      </adapters>
      <contextPath>Bookstore</contextPath>
      <war>**/*.war</war>
      <onFailure>false</onFailure>
    </hudson.plugins.deploy.DeployPublisher>
  </publishers>
  <buildWrappers/>
  <prebuilders>
    <hudson.plugins.sonar.SonarRunnerBuilder plugin="sonar@2.6.1">
      <project></project>
      <properties>sonar.projectKey=Bookstore:BSProject
sonar.projectName=BookstoreQR$BUILD_NUMBER
sonar.projectVersion=1.0
sonar.sources=src/main/java
sonar.tests=src/test/java
sonar.projectBaseDir=/var/lib/jenkins/workspace/ILP_Job_mvn_build/ILP_CI-CD/BookStore</properties>
      <javaOpts></javaOpts>
      <additionalArguments></additionalArguments>
      <jdk>(Inherit From Job)</jdk>
      <task>scan</task>
    </hudson.plugins.sonar.SonarRunnerBuilder>
  </prebuilders>
  <postbuilders>
    <org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder plugin="ansible@0.8">
      <playbook>/home/osgdev/ansilab/roles/tomcat/tomcat.yml</playbook>
      <inventory class="org.jenkinsci.plugins.ansible.InventoryDoNotSpecify"/>
      <ansibleName>Ansible - local</ansibleName>
      <limit>10.198.108.144</limit>
      <tags></tags>
      <skippedTags></skippedTags>
      <startAtTask></startAtTask>
      <credentialsId>8ef9429d-5528-414f-b729-dae41c0243ed</credentialsId>
      <vaultCredentialsId></vaultCredentialsId>
      <sudo>false</sudo>
      <sudoUser>osgdev</sudoUser>
      <forks>5</forks>
      <unbufferedOutput>true</unbufferedOutput>
      <colorizedOutput>false</colorizedOutput>
      <hostKeyChecking>false</hostKeyChecking>
      <additionalParameters></additionalParameters>
      <copyCredentialsInWorkspace>false</copyCredentialsInWorkspace>
    </org.jenkinsci.plugins.ansible.AnsiblePlaybookBuilder>
  </postbuilders>
  <runPostStepsIfResult>
    <name>SUCCESS</name>
    <ordinal>0</ordinal>
    <color>BLUE</color>
    <completeBuild>true</completeBuild>
  </runPostStepsIfResult>
</maven2-moduleset>